//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Inputs/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""0f67c4a2-51d1-43af-93cf-7d0f3574157c"",
            ""actions"": [
                {
                    ""name"": ""MoveLeft"",
                    ""type"": ""Button"",
                    ""id"": ""0abe5f50-9fff-45f6-a0ac-7f6535a66e75"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveRight"",
                    ""type"": ""Button"",
                    ""id"": ""07648e5d-586c-4091-80f1-6028c95cef82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveUp"",
                    ""type"": ""Button"",
                    ""id"": ""089c497f-674d-46b5-b48f-0231ecc181dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveDown"",
                    ""type"": ""Button"",
                    ""id"": ""a0037bee-ad56-460c-8b3a-eeb3db3e4506"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RegeneratePuzzle"",
                    ""type"": ""Button"",
                    ""id"": ""cb9ca19e-bbef-4104-9a3e-5d1a13901443"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveBlockLeft"",
                    ""type"": ""Button"",
                    ""id"": ""fa4a6c7f-aaac-43fa-baea-6e6fa38c03f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveBlockRight"",
                    ""type"": ""Button"",
                    ""id"": ""e574920f-7dac-460e-bc61-1639a40c939a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveBlockUp"",
                    ""type"": ""Button"",
                    ""id"": ""5c91869d-01d4-4ba8-bc0c-739e267c7f09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveBlockDown"",
                    ""type"": ""Button"",
                    ""id"": ""5c1fe619-3d38-4803-8a64-fb9699ded6fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1b349805-140a-4c00-8b4d-8349c5cef45a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""622ceac5-04e8-4470-80b9-2d06af614504"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b86449c-7fab-4312-95df-6740795b6444"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f57902e-6beb-45e8-b410-b6cbf326d088"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1bd9755-9663-41fc-971d-60dc7cf5d92d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""443a8c35-e139-4f63-bd03-9ac1c0ddc451"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27448afb-ea38-48c4-8d91-875e98408b78"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5440f42c-1b97-4757-b7d3-f6454286a660"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5b2842f-28ee-43f5-a615-65ea71a99428"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RegeneratePuzzle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d059c3cb-9b3c-4413-87f3-185e9be64d2e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBlockLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33a33d37-2c00-4814-8370-c8776276df25"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBlockLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bd7fb19-046c-42cf-b362-cd3a53a90370"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBlockRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18d69629-1c76-47f8-b96a-408aafbd4fbc"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBlockRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1536c8c6-0f6d-40a2-8aa2-28d7073a19bb"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBlockUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84786bd8-357d-49bd-98bc-d8a9bca3f770"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBlockUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f028c24-4488-497a-ba49-ff992eaa06c6"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBlockDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1faa7594-6ad8-4416-867f-92213de6f56b"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBlockDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_MoveLeft = m_Gameplay.FindAction("MoveLeft", throwIfNotFound: true);
        m_Gameplay_MoveRight = m_Gameplay.FindAction("MoveRight", throwIfNotFound: true);
        m_Gameplay_MoveUp = m_Gameplay.FindAction("MoveUp", throwIfNotFound: true);
        m_Gameplay_MoveDown = m_Gameplay.FindAction("MoveDown", throwIfNotFound: true);
        m_Gameplay_RegeneratePuzzle = m_Gameplay.FindAction("RegeneratePuzzle", throwIfNotFound: true);
        m_Gameplay_MoveBlockLeft = m_Gameplay.FindAction("MoveBlockLeft", throwIfNotFound: true);
        m_Gameplay_MoveBlockRight = m_Gameplay.FindAction("MoveBlockRight", throwIfNotFound: true);
        m_Gameplay_MoveBlockUp = m_Gameplay.FindAction("MoveBlockUp", throwIfNotFound: true);
        m_Gameplay_MoveBlockDown = m_Gameplay.FindAction("MoveBlockDown", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_MoveLeft;
    private readonly InputAction m_Gameplay_MoveRight;
    private readonly InputAction m_Gameplay_MoveUp;
    private readonly InputAction m_Gameplay_MoveDown;
    private readonly InputAction m_Gameplay_RegeneratePuzzle;
    private readonly InputAction m_Gameplay_MoveBlockLeft;
    private readonly InputAction m_Gameplay_MoveBlockRight;
    private readonly InputAction m_Gameplay_MoveBlockUp;
    private readonly InputAction m_Gameplay_MoveBlockDown;
    public struct GameplayActions
    {
        private @PlayerActions m_Wrapper;
        public GameplayActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveLeft => m_Wrapper.m_Gameplay_MoveLeft;
        public InputAction @MoveRight => m_Wrapper.m_Gameplay_MoveRight;
        public InputAction @MoveUp => m_Wrapper.m_Gameplay_MoveUp;
        public InputAction @MoveDown => m_Wrapper.m_Gameplay_MoveDown;
        public InputAction @RegeneratePuzzle => m_Wrapper.m_Gameplay_RegeneratePuzzle;
        public InputAction @MoveBlockLeft => m_Wrapper.m_Gameplay_MoveBlockLeft;
        public InputAction @MoveBlockRight => m_Wrapper.m_Gameplay_MoveBlockRight;
        public InputAction @MoveBlockUp => m_Wrapper.m_Gameplay_MoveBlockUp;
        public InputAction @MoveBlockDown => m_Wrapper.m_Gameplay_MoveBlockDown;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @MoveLeft.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveLeft;
                @MoveLeft.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveLeft;
                @MoveLeft.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveLeft;
                @MoveRight.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveRight;
                @MoveRight.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveRight;
                @MoveRight.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveRight;
                @MoveUp.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveUp;
                @MoveUp.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveUp;
                @MoveUp.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveUp;
                @MoveDown.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveDown;
                @MoveDown.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveDown;
                @MoveDown.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveDown;
                @RegeneratePuzzle.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRegeneratePuzzle;
                @RegeneratePuzzle.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRegeneratePuzzle;
                @RegeneratePuzzle.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRegeneratePuzzle;
                @MoveBlockLeft.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockLeft;
                @MoveBlockLeft.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockLeft;
                @MoveBlockLeft.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockLeft;
                @MoveBlockRight.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockRight;
                @MoveBlockRight.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockRight;
                @MoveBlockRight.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockRight;
                @MoveBlockUp.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockUp;
                @MoveBlockUp.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockUp;
                @MoveBlockUp.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockUp;
                @MoveBlockDown.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockDown;
                @MoveBlockDown.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockDown;
                @MoveBlockDown.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMoveBlockDown;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveLeft.started += instance.OnMoveLeft;
                @MoveLeft.performed += instance.OnMoveLeft;
                @MoveLeft.canceled += instance.OnMoveLeft;
                @MoveRight.started += instance.OnMoveRight;
                @MoveRight.performed += instance.OnMoveRight;
                @MoveRight.canceled += instance.OnMoveRight;
                @MoveUp.started += instance.OnMoveUp;
                @MoveUp.performed += instance.OnMoveUp;
                @MoveUp.canceled += instance.OnMoveUp;
                @MoveDown.started += instance.OnMoveDown;
                @MoveDown.performed += instance.OnMoveDown;
                @MoveDown.canceled += instance.OnMoveDown;
                @RegeneratePuzzle.started += instance.OnRegeneratePuzzle;
                @RegeneratePuzzle.performed += instance.OnRegeneratePuzzle;
                @RegeneratePuzzle.canceled += instance.OnRegeneratePuzzle;
                @MoveBlockLeft.started += instance.OnMoveBlockLeft;
                @MoveBlockLeft.performed += instance.OnMoveBlockLeft;
                @MoveBlockLeft.canceled += instance.OnMoveBlockLeft;
                @MoveBlockRight.started += instance.OnMoveBlockRight;
                @MoveBlockRight.performed += instance.OnMoveBlockRight;
                @MoveBlockRight.canceled += instance.OnMoveBlockRight;
                @MoveBlockUp.started += instance.OnMoveBlockUp;
                @MoveBlockUp.performed += instance.OnMoveBlockUp;
                @MoveBlockUp.canceled += instance.OnMoveBlockUp;
                @MoveBlockDown.started += instance.OnMoveBlockDown;
                @MoveBlockDown.performed += instance.OnMoveBlockDown;
                @MoveBlockDown.canceled += instance.OnMoveBlockDown;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnMoveLeft(InputAction.CallbackContext context);
        void OnMoveRight(InputAction.CallbackContext context);
        void OnMoveUp(InputAction.CallbackContext context);
        void OnMoveDown(InputAction.CallbackContext context);
        void OnRegeneratePuzzle(InputAction.CallbackContext context);
        void OnMoveBlockLeft(InputAction.CallbackContext context);
        void OnMoveBlockRight(InputAction.CallbackContext context);
        void OnMoveBlockUp(InputAction.CallbackContext context);
        void OnMoveBlockDown(InputAction.CallbackContext context);
    }
}
